dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,"['ar_ep30', 'ar_ep20', 'ssar_ep30', 'ssar_ep20_1st']","['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['actor'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['actor', 'movie']","[0.4, 0.8]","['categorical_prob_bias', 'uniform']","['actor.gender', 'none']","['2', 'none']","[0.4, 0.0]",0,True,"['FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)', 'FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)', 'SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)', 'SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)']","[[501.91490051709116, 436.4429455487989, 373.23958099540323], [267.01945043634623, 264.85394444782287, 260.9494506996125], [1068.1037178719416, 557.4171237368137, 692.6531515503302], [811.2620165059343, 433.92225699778646, 367.2955846078694]]","TopPathUnion(combine,LoadCompleteTable(director),JoinRelationship(director-movie_director, inverse=False, model=autoregressive243cbd50f567c19eb8f7613b00eb77a8605cc0ceb9feabc7904cb268),JoinRelationship(movie-movie_director, inverse=True, model=autoregressive243cbd50f567c19eb8f7613b00eb77a8605cc0ceb9feabc7904cb268),JoinRelationship(movie-movie_actor, inverse=False, model=autoregressive272c764946cc789780d552b9abaeca44788c5fb1a3efec22b1800812),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),JoinRelationship(actor-movie_actor, inverse=True, model=autoregressive272c764946cc789780d552b9abaeca44788c5fb1a3efec22b1800812),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=),ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor))",195.38153751427308,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', [(0, (495068.1195783542, None), (606629.0, None), (1735887.0, None)), (1, ([(1.0, 495068.1195776518), (2.0, 380816.724882634)], None), ([(1.0, 606629.0), (2.0, 471513.0)], None), ([(1.0, 1735887.0), (2.0, 959469.0)], None))])]",False,artificial_bias,[0.4],[0.4],1.0,True,1000,10000,['actor'],,"[[{}, {'output_tuples': 1550033, 'input_tuples': 299039, 'elapsed_time': 1.4891443611122668, 'step': 'JoinRelationship(director-movie_director, inverse=False, model=autoregressive243cbd50f567c19eb8f7613b00eb77a8605cc0ceb9feabc7904cb268)'}, {'output_tuples': 1550033, 'input_tuples': 1550033, 'elapsed_time': 2.657375705894083, 'step': 'JoinRelationship(movie-movie_director, inverse=True, model=autoregressive243cbd50f567c19eb8f7613b00eb77a8605cc0ceb9feabc7904cb268)'}, {'output_tuples': 16957977, 'input_tuples': 1550033, 'elapsed_time': 38.239829088095576, 'step': 'JoinRelationship(movie-movie_actor, inverse=False, model=autoregressive272c764946cc789780d552b9abaeca44788c5fb1a3efec22b1800812)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director)'}, {'replaced_tuples': 0, 'input_tuples': 16957977, 'elapsed_time': 6.307646255940199, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=)'}, {'output_tuples': 7919833, 'input_tuples': 16957977, 'elapsed_time': 31.68537899805233, 'step': 'JoinRelationship(actor-movie_actor, inverse=True, model=autoregressive272c764946cc789780d552b9abaeca44788c5fb1a3efec22b1800812)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 7919833, 'elapsed_time': 5.1436908966861665, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 924031.0, 'input_tuples': 7919833, 'elapsed_time': 109.64375568414107, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_actor.person_id', 'tf_movie_director.movie_id'], 'input_tuples': 7919833, 'elapsed_time': 0.18550937715917826, 'step': 'ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
