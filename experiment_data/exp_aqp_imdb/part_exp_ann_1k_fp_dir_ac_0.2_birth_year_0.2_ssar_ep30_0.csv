dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,['ssar_ep30'],"['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['director'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['director', 'movie']","[0.2, 0.8]","['bias', 'uniform']","['director.birth_year', 'none']","['none', 'none']","[0.2, 0.0]",0,True,"['SSARModel(relations=movie-movie_director,director-movie_director)\n\tCompletionSetup(movie_director->director, evidence=movie-movie_director)\n\tCompletionSetup(movie->movie_director)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_director,director-movie_director)\n\tCompletionSetup(movie_director->director, evidence=movie-movie_director)\n\tCompletionSetup(movie->movie_director)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tHierarchy(actor.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_actor.person_role_id)_SSARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tHierarchy(actor.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_actor.person_role_id)']","[[738.2188217816874, 683.5920125688426]]","TopPathUnion(combine,LoadCompleteTable(actor),JoinRelationship(actor-movie_actor, inverse=False, model=ssarc03fd58a5fa43d35004dd6909c64c4d7ae062b177bac94309693fff0),JoinRelationship(movie-movie_actor, inverse=True, model=ssarc03fd58a5fa43d35004dd6909c64c4d7ae062b177bac94309693fff0),JoinRelationship(movie-movie_director, inverse=False, model=ssarcb074de8b355b99f317f7829e0ad7eafdd9d88ea5a8577ddfbecffc8),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=movie-movie_actor,director-movie_director),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=director-movie_director),JoinRelationship(director-movie_director, inverse=True, model=ssarcb074de8b355b99f317f7829e0ad7eafdd9d88ea5a8577ddfbecffc8),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=movie-movie_actor,director-movie_director),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=director-movie_director),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=director-movie_director),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=),ProjectRequestedJoin(all_r=actor-movie_actor,movie-movie_actor,movie-movie_director,director-movie_director, tables=director))",624.6518593449146,"[(False, <RemovalMethod.BIAS: 'bias'>, 'director.birth_year', [(0, (20211.732336177265, 1952.8698816353408), (17888.0, 1952.304296545914), (89804.0, 1949.840589982449)), (1, ([(1.0, 2217.2379985384223), (2.0, 343.71876283759246)], [(1.0, 1840.5278874693379), (2.0, 1710.8489246743204)]), ([(1.0, 2173.0), (2.0, 348.0)], [(1.0, 1885.9687068568799), (2.0, 1775.2011494252874)]), ([(1.0, 10582.0), (2.0, 1760.0)], [(1.0, 1894.4936684936686), (2.0, 1804.2630681818182)])), (2, (3300.9690597491035, 1959.0781983961406), (3374.0, 1959.2275819418676), (16537.0, 1957.2985674792662)), (3, (1412.4848852929092, None), (1482.0, None), (6789.0, None))]), (True, <RemovalMethod.BIAS: 'bias'>, 'director.birth_year', [(0, (20211.732336177265, 1952.8698816353408), (17888.0, 1952.304296545914), (89804.0, 1949.840589982449)), (1, ([(1.0, 2217.2379985384223), (2.0, 343.71876283759246)], [(1.0, 1840.5278874693379), (2.0, 1710.8489246743204)]), ([(1.0, 2173.0), (2.0, 348.0)], [(1.0, 1885.9687068568799), (2.0, 1775.2011494252874)]), ([(1.0, 10582.0), (2.0, 1760.0)], [(1.0, 1894.4936684936686), (2.0, 1804.2630681818182)])), (2, (3300.9690597491035, 1959.0781983961406), (3374.0, 1959.2275819418676), (16537.0, 1957.2985674792662)), (3, (1412.4848852929092, None), (1482.0, None), (6789.0, None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,['director'],"['actor', 'movie_actor', 'movie', 'movie_director', 'director']","[[{}, {'output_tuples': 19718374, 'input_tuples': 2695356, 'elapsed_time': 156.5089992629364, 'step': 'JoinRelationship(actor-movie_actor, inverse=False, model=ssarc03fd58a5fa43d35004dd6909c64c4d7ae062b177bac94309693fff0)'}, {'output_tuples': 19718364, 'input_tuples': 19718374, 'elapsed_time': 57.12999960966408, 'step': 'JoinRelationship(movie-movie_actor, inverse=True, model=ssarc03fd58a5fa43d35004dd6909c64c4d7ae062b177bac94309693fff0)'}, {'output_tuples': 18478414, 'input_tuples': 19718364, 'elapsed_time': 221.71624775370583, 'step': 'JoinRelationship(movie-movie_director, inverse=False, model=ssarcb074de8b355b99f317f7829e0ad7eafdd9d88ea5a8577ddfbecffc8)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=movie-movie_actor)'}, {'replaced_tuples': 92949.0, 'input_tuples': 18478414, 'elapsed_time': 30.33951545180753, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=)'}, {'output_tuples': 6495183, 'input_tuples': 18478414, 'elapsed_time': 58.21976006496698, 'step': 'JoinRelationship(director-movie_director, inverse=True, model=ssarcb074de8b355b99f317f7829e0ad7eafdd9d88ea5a8577ddfbecffc8)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=movie-movie_actor,director-movie_director)'}, {'replaced_tuples': 19941.0, 'input_tuples': 6495183, 'elapsed_time': 16.969872382003814, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=director-movie_director)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=director-movie_director)'}, {'replaced_tuples': 715628.0, 'input_tuples': 6495183, 'elapsed_time': 83.5785689521581, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_director.person_id', 'tf_movie_actor.movie_id'], 'input_tuples': 6495183, 'elapsed_time': 0.1537270350381732, 'step': 'ProjectRequestedJoin(all_r=actor-movie_actor,movie-movie_actor,movie-movie_director,director-movie_director, tables=director)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
