dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,['ssar_ep30'],"['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['actor'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['actor', 'movie']","[0.6, 0.8]","['categorical_prob_bias', 'uniform']","['actor.gender', 'none']","['2', 'none']","[0.6, 0.0]",0,True,"['SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)']","[[794.1769398241304, 614.4999907482415]]","TopPathUnion(combine,LoadCompleteTable(director),JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=),ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor))",512.5164346159436,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', [(0, (873649.6081096506, None), (882832.0, None), (1735887.0, None)), (1, ([(1.0, 873649.6081082744), (2.0, 721123.3509129358)], None), ([(1.0, 882832.0), (2.0, 734381.0)], None), ([(1.0, 1735887.0), (2.0, 959469.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', [(0, (873649.6081096506, None), (882832.0, None), (1735887.0, None)), (1, ([(1.0, 873649.6081082744), (2.0, 721123.3509129358)], None), ([(1.0, 882832.0), (2.0, 734381.0)], None), ([(1.0, 1735887.0), (2.0, 959469.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,['actor'],"['director', 'movie_director', 'movie', 'movie_actor', 'actor']","[[{}, {'output_tuples': 1631132, 'input_tuples': 299039, 'elapsed_time': 16.966148673091084, 'step': 'JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 1631132, 'input_tuples': 1631132, 'elapsed_time': 8.656474209856242, 'step': 'JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 17658214, 'input_tuples': 1631132, 'elapsed_time': 97.46061946731061, 'step': 'JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director)'}, {'replaced_tuples': 0, 'input_tuples': 17658214, 'elapsed_time': 6.468074627220631, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=)'}, {'output_tuples': 11692304, 'input_tuples': 17658214, 'elapsed_time': 177.61527674784884, 'step': 'JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 11692304, 'elapsed_time': 6.322894072625786, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 1397725.0, 'input_tuples': 11692304, 'elapsed_time': 198.67146460991353, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_actor.person_id', 'tf_movie_director.movie_id'], 'input_tuples': 11692304, 'elapsed_time': 0.3117729350924492, 'step': 'ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
