dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,"['ar_ep30', 'ar_ep20', 'ssar_ep30', 'ssar_ep20_1st']","['neighborhoods', 'hosts', 'listings']","['listings', 'neighborhoods']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.8],['bias'],['listings.price'],['none'],[0.4],0,True,"['FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)', 'FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)', 'SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tHierarchy(neighborhoods.neighborhood_id, listings.id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)', 'SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tHierarchy(neighborhoods.neighborhood_id, listings.id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)']","[[304.88826937100384, 248.20311922207475], [177.50060206401395, 65.43154889065772], [389.68211947000236, 464.5483487928286], [234.2724019550078, 141.56723181996495]]","TopPathUnion(combine,LoadCompleteTable(hosts),JoinRelationship(hosts-listings, inverse=False, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b),JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=neighborhoods,listings))",4.470689017005498,"[(False, <RemovalMethod.BIAS: 'bias'>, 'listings.price', [(13, ([(1.0, 28052.0), (2.0, 905.0), (3.0, 6497.0), (4.0, 115.0), (5.0, 613.0), (6.0, 743.0), (7.0, 27.0), (8.0, 183.0), (9.0, 105.0), (10.0, 27.0), (11.0, 449.0), (12.0, 56.0), (13.0, 67.0), (14.0, 5.0), (15.0, 16.0), (16.0, 19.0), (17.0, 519.0), (18.0, 1946.0), (19.0, 39.0), (20.0, 15.0), (21.0, 6.0), (22.0, 7.0), (23.0, 16.0), (27.0, 2.0), (28.0, 2.0), (30.0, 7.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 87.88688863539141), (2.0, 65.2121546961326), (3.0, 150.78128366938586), (4.0, 70.23478260869565), (5.0, 99.30831973898859), (6.0, 80.37012113055182), (7.0, 105.4074074074074), (8.0, 128.6120218579235), (9.0, 62.647619047619045), (10.0, 81.5925925925926), (11.0, 78.11135857461025), (12.0, 77.73214285714286), (13.0, 223.08955223880596), (14.0, 33.6), (15.0, 26.3125), (16.0, 75.05263157894737), (17.0, 171.20616570327553), (18.0, 218.0878725590956), (19.0, 107.6923076923077), (20.0, 98.33333333333333), (21.0, 90.0), (22.0, 189.14285714285714), (23.0, 128.3125), (27.0, 95.0), (28.0, 135.0), (30.0, 28.714285714285715), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)]), ([(1.0, 24979.0), (2.0, 772.0), (3.0, 5773.0), (4.0, 73.0), (5.0, 571.0), (6.0, 666.0), (7.0, 23.0), (8.0, 141.0), (9.0, 80.0), (10.0, 19.0), (11.0, 403.0), (12.0, 43.0), (13.0, 59.0), (14.0, 5.0), (15.0, 12.0), (16.0, 16.0), (17.0, 457.0), (18.0, 1680.0), (19.0, 17.0), (20.0, 10.0), (21.0, 5.0), (22.0, 5.0), (23.0, 9.0), (27.0, 1.0), (28.0, 2.0), (30.0, 5.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 83.89723367628808), (2.0, 64.12694300518135), (3.0, 148.8181188290317), (4.0, 46.15068493150685), (5.0, 94.65849387040281), (6.0, 74.13063063063063), (7.0, 111.82608695652173), (8.0, 116.8936170212766), (9.0, 53.9875), (10.0, 87.26315789473684), (11.0, 74.02481389578163), (12.0, 76.62790697674419), (13.0, 240.23728813559322), (14.0, 33.6), (15.0, 22.5), (16.0, 75.0625), (17.0, 173.20787746170677), (18.0, 221.31607142857143), (19.0, 134.41176470588235), (20.0, 98.3), (21.0, 99.6), (22.0, 243.6), (23.0, 114.55555555555556), (27.0, 55.0), (28.0, 135.0), (30.0, 28.2), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)]), ([(1.0, 32110.0), (2.0, 1032.0), (3.0, 7168.0), (4.0, 95.0), (5.0, 744.0), (6.0, 870.0), (7.0, 31.0), (8.0, 187.0), (9.0, 103.0), (10.0, 23.0), (11.0, 492.0), (12.0, 50.0), (13.0, 71.0), (14.0, 7.0), (15.0, 17.0), (16.0, 23.0), (17.0, 561.0), (18.0, 1970.0), (19.0, 25.0), (20.0, 12.0), (21.0, 7.0), (22.0, 5.0), (23.0, 9.0), (27.0, 1.0), (28.0, 2.0), (30.0, 7.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 80.94123326066646), (2.0, 60.366279069767444), (3.0, 141.87723214285714), (4.0, 44.92631578947368), (5.0, 89.74731182795699), (6.0, 72.84482758620689), (7.0, 112.0), (8.0, 112.57219251336899), (9.0, 54.18446601941748), (10.0, 79.8695652173913), (11.0, 70.8719512195122), (12.0, 77.46), (13.0, 249.7605633802817), (14.0, 32.714285714285715), (15.0, 25.88235294117647), (16.0, 77.78260869565217), (17.0, 168.44385026737967), (18.0, 212.93147208121826), (19.0, 144.04), (20.0, 91.91666666666667), (21.0, 95.57142857142857), (22.0, 243.6), (23.0, 114.55555555555556), (27.0, 55.0), (28.0, 135.0), (30.0, 29.571428571428573), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)])), (14, ([(1.0, 27159.0), (2.0, 76074.0), (3.0, 10476.0), (4.0, 4419.0), (5.0, 3445.0), (6.0, 8897.0), (7.0, 15578.0), (8.0, 1613.0), (9.0, 41121.0), (10.0, 2681.0), (11.0, 28661.0), (12.0, 3155.0), (13.0, 20.0), (14.0, 17935.0), (15.0, 17240.0), (16.0, 4613.0), (17.0, 22132.0), (18.0, 2.0), (21.0, 1.0), (23.0, 1.0)], [(1.0, 134.40296034463714), (2.0, 213.5358992559876), (3.0, 157.07751050019093), (4.0, 96.7417967866033), (5.0, 62.85079825834543), (6.0, 88.86242553669776), (7.0, 517.2389908845809), (8.0, 164.85120892746434), (9.0, 108.76929063009167), (10.0, 157.35546437896306), (11.0, 145.4786992777642), (12.0, 460.4003169572108), (13.0, 396.25), (14.0, 116.36816281014775), (15.0, 142.82006960556845), (16.0, 89.56405809668328), (17.0, 225.95526838966202), (18.0, 100.0), (21.0, 102.0), (23.0, 237.0)]), ([(1.0, 23806.0), (2.0, 65761.0), (3.0, 9555.0), (4.0, 3776.0), (5.0, 3283.0), (6.0, 7996.0), (7.0, 15232.0), (8.0, 1257.0), (9.0, 38150.0), (10.0, 2609.0), (11.0, 24922.0), (12.0, 2895.0), (13.0, 18.0), (14.0, 16815.0), (15.0, 15316.0), (16.0, 4143.0), (17.0, 20455.0), (18.0, 2.0), (21.0, 1.0), (23.0, 1.0)], [(1.0, 130.67516592455684), (2.0, 211.66022414500995), (3.0, 149.9913134484563), (4.0, 82.78813559322033), (5.0, 59.0304599451721), (6.0, 79.37143571785893), (7.0, 523.2677914915967), (8.0, 146.53460620525058), (9.0, 103.68466579292267), (10.0, 157.42928325028745), (11.0, 138.45630366744243), (12.0, 474.8749568221071), (13.0, 411.3888888888889), (14.0, 113.88260481712757), (15.0, 140.26031600940192), (16.0, 84.19333816075307), (17.0, 227.75296993400147), (18.0, 100.0), (21.0, 102.0), (23.0, 237.0)]), ([(1.0, 29707.0), (2.0, 78847.0), (3.0, 11810.0), (4.0, 4855.0), (5.0, 4268.0), (6.0, 10282.0), (7.0, 16576.0), (8.0, 1576.0), (9.0, 48543.0), (10.0, 3165.0), (11.0, 30962.0), (12.0, 3212.0), (13.0, 19.0), (14.0, 21128.0), (15.0, 19033.0), (16.0, 5309.0), (17.0, 24298.0), (18.0, 2.0), (21.0, 1.0), (23.0, 1.0)], [(1.0, 125.88339448614805), (2.0, 202.7845701168085), (3.0, 146.9215918712955), (4.0, 80.80308959835222), (5.0, 57.52249297094658), (6.0, 77.14141217661934), (7.0, 501.21157094594594), (8.0, 141.71065989847716), (9.0, 100.58237026965783), (10.0, 152.95071090047392), (11.0, 134.73096053226536), (12.0, 446.4399128268991), (13.0, 407.42105263157896), (14.0, 110.60469519121546), (15.0, 135.82619660589503), (16.0, 81.5501977773592), (17.0, 218.71487365215245), (18.0, 100.0), (21.0, 102.0), (23.0, 237.0)])), (15, ([(1.0, 27159.0), (2.0, 12863.0), (3.0, 423.0)], [(1.0, 134.40296034463714), (2.0, 45.1626370209127), (3.0, 40.146572104018915)]), ([(1.0, 23806.0), (2.0, 11712.0), (3.0, 315.0)], [(1.0, 130.67516592455684), (2.0, 44.32855191256831), (3.0, 40.853968253968254)]), ([(1.0, 29707.0), (2.0, 15505.0), (3.0, 417.0)], [(1.0, 125.88339448614805), (2.0, 43.24269590454692), (3.0, 38.37649880095923)])), (16, (40446.0, 105.31407109921166), (35833.0, 101.9192009624262), (45629.0, 97.2405694575653)), (17, ([(1.0, 28052.0), (2.0, 905.0), (3.0, 6497.0), (4.0, 115.0), (5.0, 613.0), (6.0, 743.0), (7.0, 27.0), (8.0, 183.0), (9.0, 105.0), (10.0, 27.0), (11.0, 449.0), (12.0, 56.0), (13.0, 67.0), (14.0, 5.0), (15.0, 16.0), (16.0, 19.0), (17.0, 519.0), (18.0, 1946.0), (19.0, 39.0), (20.0, 15.0), (21.0, 6.0), (22.0, 7.0), (23.0, 16.0), (27.0, 2.0), (28.0, 2.0), (30.0, 7.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 87.88688863539141), (2.0, 65.2121546961326), (3.0, 150.78128366938586), (4.0, 70.23478260869565), (5.0, 99.30831973898859), (6.0, 80.37012113055182), (7.0, 105.4074074074074), (8.0, 128.6120218579235), (9.0, 62.647619047619045), (10.0, 81.5925925925926), (11.0, 78.11135857461025), (12.0, 77.73214285714286), (13.0, 223.08955223880596), (14.0, 33.6), (15.0, 26.3125), (16.0, 75.05263157894737), (17.0, 171.20616570327553), (18.0, 218.0878725590956), (19.0, 107.6923076923077), (20.0, 98.33333333333333), (21.0, 90.0), (22.0, 189.14285714285714), (23.0, 128.3125), (27.0, 95.0), (28.0, 135.0), (30.0, 28.714285714285715), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)]), ([(1.0, 24979.0), (2.0, 772.0), (3.0, 5773.0), (4.0, 73.0), (5.0, 571.0), (6.0, 666.0), (7.0, 23.0), (8.0, 141.0), (9.0, 80.0), (10.0, 19.0), (11.0, 403.0), (12.0, 43.0), (13.0, 59.0), (14.0, 5.0), (15.0, 12.0), (16.0, 16.0), (17.0, 457.0), (18.0, 1680.0), (19.0, 17.0), (20.0, 10.0), (21.0, 5.0), (22.0, 5.0), (23.0, 9.0), (27.0, 1.0), (28.0, 2.0), (30.0, 5.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 83.89723367628808), (2.0, 64.12694300518135), (3.0, 148.8181188290317), (4.0, 46.15068493150685), (5.0, 94.65849387040281), (6.0, 74.13063063063063), (7.0, 111.82608695652173), (8.0, 116.8936170212766), (9.0, 53.9875), (10.0, 87.26315789473684), (11.0, 74.02481389578163), (12.0, 76.62790697674419), (13.0, 240.23728813559322), (14.0, 33.6), (15.0, 22.5), (16.0, 75.0625), (17.0, 173.20787746170677), (18.0, 221.31607142857143), (19.0, 134.41176470588235), (20.0, 98.3), (21.0, 99.6), (22.0, 243.6), (23.0, 114.55555555555556), (27.0, 55.0), (28.0, 135.0), (30.0, 28.2), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)]), ([(1.0, 32110.0), (2.0, 1032.0), (3.0, 7168.0), (4.0, 95.0), (5.0, 744.0), (6.0, 870.0), (7.0, 31.0), (8.0, 187.0), (9.0, 103.0), (10.0, 23.0), (11.0, 492.0), (12.0, 50.0), (13.0, 71.0), (14.0, 7.0), (15.0, 17.0), (16.0, 23.0), (17.0, 561.0), (18.0, 1970.0), (19.0, 25.0), (20.0, 12.0), (21.0, 7.0), (22.0, 5.0), (23.0, 9.0), (27.0, 1.0), (28.0, 2.0), (30.0, 7.0), (31.0, 1.0), (32.0, 3.0), (34.0, 1.0), (38.0, 1.0), (42.0, 1.0)], [(1.0, 80.94123326066646), (2.0, 60.366279069767444), (3.0, 141.87723214285714), (4.0, 44.92631578947368), (5.0, 89.74731182795699), (6.0, 72.84482758620689), (7.0, 112.0), (8.0, 112.57219251336899), (9.0, 54.18446601941748), (10.0, 79.8695652173913), (11.0, 70.8719512195122), (12.0, 77.46), (13.0, 249.7605633802817), (14.0, 32.714285714285715), (15.0, 25.88235294117647), (16.0, 77.78260869565217), (17.0, 168.44385026737967), (18.0, 212.93147208121826), (19.0, 144.04), (20.0, 91.91666666666667), (21.0, 95.57142857142857), (22.0, 243.6), (23.0, 114.55555555555556), (27.0, 55.0), (28.0, 135.0), (30.0, 29.571428571428573), (31.0, 36.0), (32.0, 55.0), (34.0, 36.0), (38.0, 50.0), (42.0, 100.0)]))])]",False,artificial_bias,[0.6],[0.6],1.0,True,1000,10000,"['listings', 'neighborhoods']",,"[[{}, {'output_tuples': 436953, 'input_tuples': 363133, 'elapsed_time': 1.3895848779939115, 'step': 'JoinRelationship(hosts-listings, inverse=False, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b)'}, {'output_tuples': 436793, 'input_tuples': 436953, 'elapsed_time': 1.3832661090127658, 'step': 'JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings)'}, {'replaced_tuples': 34722.0, 'input_tuples': 436793, 'elapsed_time': 1.670366471982561, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 436793, 'elapsed_time': 0.02486481101368554, 'step': 'ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=neighborhoods,listings)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
