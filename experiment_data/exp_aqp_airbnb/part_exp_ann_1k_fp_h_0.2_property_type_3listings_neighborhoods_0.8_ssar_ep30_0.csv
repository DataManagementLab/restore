dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,['ssar_ep30'],"['neighborhoods', 'hosts', 'listings']","['listings', 'neighborhoods']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.2],['categorical_prob_bias'],['listings.property_type'],['3'],[0.8],0,True,"['SSARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tHierarchy(neighborhoods.neighborhood_id, listings.id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)_SSARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)\n\tHierarchy(hosts.host_id, neighborhoods.neighbourhood_cleansed, neighborhoods.neighbourhood_group_cleansed, neighborhoods.state, neighborhoods.country, neighborhoods.neighborhood_id, neighborhoods.tf_listings.neighborhood_id, listings.property_type, listings.room_type, listings.accommodates, listings.price, listings.security_deposit, listings.cleaning_fee, listings.guests_included, listings.extra_people, listings.minimum_nights, listings.availability_365, listings.cancellation_policy)']","[[65.6417398750782, 326.87058319701464]]","TopPathUnion(combine,LoadCompleteTable(neighborhoods),JoinRelationship(neighborhoods-listings, inverse=False, model=ssar0646f9a816b0ff68a2493f8354e6e1b650cb776b3cdb02a630d6cc37),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=neighborhoods-listings, tables=neighborhoods,listings))",3.5735148119856603,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 1666.0), (2.0, 1799.0), (4.0, 440.0), (5.0, 500.0), (6.0, 188.0), (7.0, 460.0), (8.0, 84.0), (9.0, 193.0), (10.0, 103.0), (11.0, 74.0), (36.0, 1229.0), (37.0, 207.0), (38.0, 144.0), (39.0, 427.0), (40.0, 95.0), (41.0, 111.0), (42.0, 356.0), (48.0, 122.0), (49.0, 54.0), (50.0, 93.0), (51.0, 104.0), (52.0, 106.0), (53.0, 83.0), (54.0, 26.0), (55.0, 67.0), (56.0, 24.0), (57.0, 15.0), (58.0, 26.0), (59.0, 52.0), (60.0, 71.0), (61.0, 19.0)], None), ([(1.0, 556.0), (2.0, 836.0), (4.0, 353.0), (5.0, 280.0), (6.0, 135.0), (7.0, 296.0), (8.0, 66.0), (9.0, 96.0), (10.0, 37.0), (11.0, 55.0), (36.0, 1137.0), (37.0, 139.0), (38.0, 70.0), (39.0, 162.0), (40.0, 66.0), (41.0, 93.0), (42.0, 154.0), (48.0, 80.0), (49.0, 38.0), (50.0, 39.0), (51.0, 70.0), (52.0, 55.0), (53.0, 32.0), (54.0, 12.0), (55.0, 54.0), (56.0, 16.0), (57.0, 8.0), (58.0, 12.0), (59.0, 13.0), (60.0, 19.0), (61.0, 10.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (14648.0, None), (8655.0, None), (45629.0, None)), (8, ([(1.0, 8299.0), (2.0, 23204.0), (3.0, 2805.0), (4.0, 830.0), (5.0, 700.0), (6.0, 1730.0), (7.0, 4765.0), (8.0, 288.0), (9.0, 6645.0), (10.0, 673.0), (11.0, 8180.0), (12.0, 743.0), (13.0, 16.0), (14.0, 4734.0), (15.0, 4307.0), (16.0, 970.0), (17.0, 7075.0), (22.0, 2.0)], None), ([(1.0, 5576.0), (2.0, 15726.0), (3.0, 1270.0), (4.0, 585.0), (5.0, 584.0), (6.0, 1165.0), (7.0, 1974.0), (8.0, 152.0), (9.0, 4262.0), (10.0, 659.0), (11.0, 5236.0), (12.0, 438.0), (13.0, 2.0), (14.0, 3520.0), (15.0, 2866.0), (16.0, 655.0), (17.0, 4525.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 1666.0), (2.0, 1799.0), (4.0, 440.0), (5.0, 500.0), (6.0, 188.0), (7.0, 460.0), (8.0, 84.0), (9.0, 193.0), (10.0, 103.0), (11.0, 74.0), (36.0, 1229.0), (37.0, 207.0), (38.0, 144.0), (39.0, 427.0), (40.0, 95.0), (41.0, 111.0), (42.0, 356.0), (48.0, 122.0), (49.0, 54.0), (50.0, 93.0), (51.0, 104.0), (52.0, 106.0), (53.0, 83.0), (54.0, 26.0), (55.0, 67.0), (56.0, 24.0), (57.0, 15.0), (58.0, 26.0), (59.0, 52.0), (60.0, 71.0), (61.0, 19.0)], None), ([(1.0, 556.0), (2.0, 836.0), (4.0, 353.0), (5.0, 280.0), (6.0, 135.0), (7.0, 296.0), (8.0, 66.0), (9.0, 96.0), (10.0, 37.0), (11.0, 55.0), (36.0, 1137.0), (37.0, 139.0), (38.0, 70.0), (39.0, 162.0), (40.0, 66.0), (41.0, 93.0), (42.0, 154.0), (48.0, 80.0), (49.0, 38.0), (50.0, 39.0), (51.0, 70.0), (52.0, 55.0), (53.0, 32.0), (54.0, 12.0), (55.0, 54.0), (56.0, 16.0), (57.0, 8.0), (58.0, 12.0), (59.0, 13.0), (60.0, 19.0), (61.0, 10.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (14648.0, None), (8655.0, None), (45629.0, None)), (8, ([(1.0, 8299.0), (2.0, 23204.0), (3.0, 2805.0), (4.0, 830.0), (5.0, 700.0), (6.0, 1730.0), (7.0, 4765.0), (8.0, 288.0), (9.0, 6645.0), (10.0, 673.0), (11.0, 8180.0), (12.0, 743.0), (13.0, 16.0), (14.0, 4734.0), (15.0, 4307.0), (16.0, 970.0), (17.0, 7075.0), (22.0, 2.0)], None), ([(1.0, 5576.0), (2.0, 15726.0), (3.0, 1270.0), (4.0, 585.0), (5.0, 584.0), (6.0, 1165.0), (7.0, 1974.0), (8.0, 152.0), (9.0, 4262.0), (10.0, 659.0), (11.0, 5236.0), (12.0, 438.0), (13.0, 2.0), (14.0, 3520.0), (15.0, 2866.0), (16.0, 655.0), (17.0, 4525.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,"['listings', 'neighborhoods']","['neighborhoods', 'listings']","[[{}, {'output_tuples': 159659, 'input_tuples': 8005, 'elapsed_time': 3.564197150990367, 'step': 'JoinRelationship(neighborhoods-listings, inverse=False, model=ssar0646f9a816b0ff68a2493f8354e6e1b650cb776b3cdb02a630d6cc37)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 159659, 'elapsed_time': 0.00633226300124079, 'step': 'ProjectRequestedJoin(all_r=neighborhoods-listings, tables=neighborhoods,listings)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
