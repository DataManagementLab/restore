dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,['ar_ep30'],"['neighborhoods', 'hosts', 'listings']","['listings', 'hosts']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.2],['categorical_prob_bias'],['listings.property_type'],['3'],[0.8],0,True,"['FlatARModel(relations=neighborhoods-listings,hosts-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tCompletionSetup(listings->hosts, evidence=neighborhoods-listings)_FlatARModel(relations=neighborhoods-listings,hosts-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tCompletionSetup(listings->hosts, evidence=neighborhoods-listings)_FlatARModel(relations=hosts-listings)\n\tCompletionSetup(hosts->listings)']","[[48.008915849000914, 81.64722707960755]]","TopPathUnion(combine,LoadCompleteTable(neighborhoods),JoinRelationship(neighborhoods-listings, inverse=False, model=autoregressive55791293a58d8560694681fc9e6e102b6da6c0ae5acacb25670adc01),JoinRelationship(hosts-listings, inverse=True, model=autoregressive55791293a58d8560694681fc9e6e102b6da6c0ae5acacb25670adc01),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=hosts-listings),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=neighborhoods-listings,hosts-listings, tables=listings,hosts))",28.602646965999156,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(3, ([(2013.0, 41928.0), (2014.0, 59456.0), (2015.0, 64885.0), (2016.0, 47377.0), (2017.0, 9186.0)], None), ([(2013.0, 15879.0), (2014.0, 20298.0), (2015.0, 24482.0), (2016.0, 17858.0), (2017.0, 3318.0)], None), ([(2013.0, 78931.0), (2014.0, 102470.0), (2015.0, 121507.0), (2016.0, 90082.0), (2017.0, 16522.0)], None)), (4, (0, None), (0, None), (1.0, None)), (5, ([(2008.0, 61.0), (2009.0, 494.0), (2010.0, 2283.0), (2011.0, 6572.0), (2012.0, 13827.0), (2013.0, 19436.0), (2014.0, 27324.0), (2015.0, 27705.0), (2016.0, 20251.0), (2017.0, 3969.0)], None), ([(2008.0, 25.0), (2009.0, 248.0), (2010.0, 834.0), (2011.0, 2764.0), (2012.0, 6080.0), (2013.0, 8468.0), (2014.0, 10077.0), (2015.0, 11931.0), (2016.0, 8450.0), (2017.0, 1557.0)], None), ([(2008.0, 123.0), (2009.0, 1212.0), (2010.0, 4076.0), (2011.0, 13832.0), (2012.0, 29713.0), (2013.0, 40801.0), (2014.0, 49481.0), (2015.0, 57749.0), (2016.0, 42300.0), (2017.0, 7580.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(3, ([(2013.0, 41928.0), (2014.0, 59456.0), (2015.0, 64885.0), (2016.0, 47377.0), (2017.0, 9186.0)], None), ([(2013.0, 15879.0), (2014.0, 20298.0), (2015.0, 24482.0), (2016.0, 17858.0), (2017.0, 3318.0)], None), ([(2013.0, 78931.0), (2014.0, 102470.0), (2015.0, 121507.0), (2016.0, 90082.0), (2017.0, 16522.0)], None)), (4, (0, None), (0, None), (1.0, None)), (5, ([(2008.0, 61.0), (2009.0, 494.0), (2010.0, 2283.0), (2011.0, 6572.0), (2012.0, 13827.0), (2013.0, 19436.0), (2014.0, 27324.0), (2015.0, 27705.0), (2016.0, 20251.0), (2017.0, 3969.0)], None), ([(2008.0, 25.0), (2009.0, 248.0), (2010.0, 834.0), (2011.0, 2764.0), (2012.0, 6080.0), (2013.0, 8468.0), (2014.0, 10077.0), (2015.0, 11931.0), (2016.0, 8450.0), (2017.0, 1557.0)], None), ([(2008.0, 123.0), (2009.0, 1212.0), (2010.0, 4076.0), (2011.0, 13832.0), (2012.0, 29713.0), (2013.0, 40801.0), (2014.0, 49481.0), (2015.0, 57749.0), (2016.0, 42300.0), (2017.0, 7580.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,"['listings', 'hosts']","['neighborhoods', 'listings']","[[{}, {'output_tuples': 269843, 'input_tuples': 8005, 'elapsed_time': 2.6523424619808793, 'step': 'JoinRelationship(neighborhoods-listings, inverse=False, model=autoregressive55791293a58d8560694681fc9e6e102b6da6c0ae5acacb25670adc01)'}, {'output_tuples': 271396, 'input_tuples': 269843, 'elapsed_time': 1.4362020089756697, 'step': 'JoinRelationship(hosts-listings, inverse=True, model=autoregressive55791293a58d8560694681fc9e6e102b6da6c0ae5acacb25670adc01)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=hosts-listings)'}, {'replaced_tuples': 170886.0, 'input_tuples': 271396, 'elapsed_time': 24.500789930985775, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 271396, 'elapsed_time': 0.010833467007614672, 'step': 'ProjectRequestedJoin(all_r=neighborhoods-listings,hosts-listings, tables=listings,hosts)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
