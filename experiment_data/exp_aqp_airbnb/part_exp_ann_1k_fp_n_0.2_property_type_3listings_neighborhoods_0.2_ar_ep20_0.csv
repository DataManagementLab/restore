dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,['ar_ep20'],"['neighborhoods', 'hosts', 'listings']","['listings', 'neighborhoods']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.2],['categorical_prob_bias'],['listings.property_type'],['3'],[0.2],0,True,"['FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(hosts->listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)_FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(hosts->listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)_FlatARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)']","[[128.41380289700464, 57.19189833384007]]","TopPathUnion(combine,LoadCompleteTable(hosts),JoinRelationship(hosts-listings, inverse=False, model=autoregressive896882b049d87933c0344201a64ac13319bbdd0b90bfb7da130ef612),JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressive896882b049d87933c0344201a64ac13319bbdd0b90bfb7da130ef612),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=neighborhoods,listings))",5.905187066993676,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 1545.0), (2.0, 1671.0), (4.0, 671.0), (5.0, 682.0), (6.0, 209.0), (7.0, 606.0), (8.0, 73.0), (9.0, 177.0), (10.0, 76.0), (11.0, 83.0), (36.0, 1886.0), (37.0, 237.0), (38.0, 114.0), (39.0, 472.0), (40.0, 142.0), (41.0, 230.0), (42.0, 349.0), (48.0, 108.0), (49.0, 129.0), (50.0, 53.0), (51.0, 95.0), (52.0, 113.0), (53.0, 47.0), (54.0, 19.0), (55.0, 68.0), (56.0, 12.0), (57.0, 12.0), (58.0, 45.0), (59.0, 16.0), (60.0, 56.0), (61.0, 23.0)], None), ([(1.0, 738.0), (2.0, 1100.0), (4.0, 402.0), (5.0, 336.0), (6.0, 140.0), (7.0, 330.0), (8.0, 61.0), (9.0, 121.0), (10.0, 48.0), (11.0, 63.0), (36.0, 1353.0), (37.0, 151.0), (38.0, 84.0), (39.0, 192.0), (40.0, 68.0), (41.0, 104.0), (42.0, 164.0), (48.0, 91.0), (49.0, 29.0), (50.0, 49.0), (51.0, 74.0), (52.0, 65.0), (53.0, 33.0), (54.0, 11.0), (55.0, 57.0), (56.0, 10.0), (57.0, 10.0), (58.0, 25.0), (59.0, 13.0), (60.0, 18.0), (61.0, 19.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (14687.0, None), (9061.0, None), (45629.0, None)), (8, ([(1.0, 8021.0), (2.0, 22034.0), (3.0, 2009.0), (4.0, 923.0), (5.0, 1105.0), (6.0, 2815.0), (7.0, 2639.0), (8.0, 209.0), (9.0, 13138.0), (10.0, 703.0), (11.0, 8666.0), (12.0, 700.0), (13.0, 17.0), (14.0, 5736.0), (15.0, 4071.0), (16.0, 1145.0), (17.0, 4608.0), (18.0, 2.0), (20.0, 1.0), (22.0, 1.0), (23.0, 1.0)], None), ([(1.0, 5464.0), (2.0, 13685.0), (3.0, 1293.0), (4.0, 656.0), (5.0, 612.0), (6.0, 1343.0), (7.0, 2220.0), (8.0, 166.0), (9.0, 5096.0), (10.0, 563.0), (11.0, 5075.0), (12.0, 516.0), (13.0, 7.0), (14.0, 4154.0), (15.0, 2739.0), (16.0, 806.0), (17.0, 3804.0), (18.0, 2.0), (23.0, 1.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 1545.0), (2.0, 1671.0), (4.0, 671.0), (5.0, 682.0), (6.0, 209.0), (7.0, 606.0), (8.0, 73.0), (9.0, 177.0), (10.0, 76.0), (11.0, 83.0), (36.0, 1886.0), (37.0, 237.0), (38.0, 114.0), (39.0, 472.0), (40.0, 142.0), (41.0, 230.0), (42.0, 349.0), (48.0, 108.0), (49.0, 129.0), (50.0, 53.0), (51.0, 95.0), (52.0, 113.0), (53.0, 47.0), (54.0, 19.0), (55.0, 68.0), (56.0, 12.0), (57.0, 12.0), (58.0, 45.0), (59.0, 16.0), (60.0, 56.0), (61.0, 23.0)], None), ([(1.0, 738.0), (2.0, 1100.0), (4.0, 402.0), (5.0, 336.0), (6.0, 140.0), (7.0, 330.0), (8.0, 61.0), (9.0, 121.0), (10.0, 48.0), (11.0, 63.0), (36.0, 1353.0), (37.0, 151.0), (38.0, 84.0), (39.0, 192.0), (40.0, 68.0), (41.0, 104.0), (42.0, 164.0), (48.0, 91.0), (49.0, 29.0), (50.0, 49.0), (51.0, 74.0), (52.0, 65.0), (53.0, 33.0), (54.0, 11.0), (55.0, 57.0), (56.0, 10.0), (57.0, 10.0), (58.0, 25.0), (59.0, 13.0), (60.0, 18.0), (61.0, 19.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (14687.0, None), (9061.0, None), (45629.0, None)), (8, ([(1.0, 8021.0), (2.0, 22034.0), (3.0, 2009.0), (4.0, 923.0), (5.0, 1105.0), (6.0, 2815.0), (7.0, 2639.0), (8.0, 209.0), (9.0, 13138.0), (10.0, 703.0), (11.0, 8666.0), (12.0, 700.0), (13.0, 17.0), (14.0, 5736.0), (15.0, 4071.0), (16.0, 1145.0), (17.0, 4608.0), (18.0, 2.0), (20.0, 1.0), (22.0, 1.0), (23.0, 1.0)], None), ([(1.0, 5464.0), (2.0, 13685.0), (3.0, 1293.0), (4.0, 656.0), (5.0, 612.0), (6.0, 1343.0), (7.0, 2220.0), (8.0, 166.0), (9.0, 5096.0), (10.0, 563.0), (11.0, 5075.0), (12.0, 516.0), (13.0, 7.0), (14.0, 4154.0), (15.0, 2739.0), (16.0, 806.0), (17.0, 3804.0), (18.0, 2.0), (23.0, 1.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,"['listings', 'neighborhoods']","['hosts', 'listings']","[[{}, {'output_tuples': 169108, 'input_tuples': 363133, 'elapsed_time': 2.7773998649790883, 'step': 'JoinRelationship(hosts-listings, inverse=False, model=autoregressive896882b049d87933c0344201a64ac13319bbdd0b90bfb7da130ef612)'}, {'output_tuples': 169066, 'input_tuples': 169108, 'elapsed_time': 0.725402285985183, 'step': 'JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressive896882b049d87933c0344201a64ac13319bbdd0b90bfb7da130ef612)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings)'}, {'replaced_tuples': 68578.0, 'input_tuples': 169066, 'elapsed_time': 2.393492269970011, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 169066, 'elapsed_time': 0.006460450997110456, 'step': 'ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=neighborhoods,listings)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
