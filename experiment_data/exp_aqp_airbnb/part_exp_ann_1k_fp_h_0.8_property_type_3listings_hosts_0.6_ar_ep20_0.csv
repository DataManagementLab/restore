dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,['ar_ep20'],"['neighborhoods', 'hosts', 'listings']","['listings', 'hosts']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.8],['categorical_prob_bias'],['listings.property_type'],['3'],[0.6],0,True,"['FlatARModel(relations=neighborhoods-listings,hosts-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tCompletionSetup(listings->hosts, evidence=neighborhoods-listings)_FlatARModel(relations=neighborhoods-listings,hosts-listings)\n\tCompletionSetup(neighborhoods->listings)\n\tCompletionSetup(listings->hosts, evidence=neighborhoods-listings)_FlatARModel(relations=hosts-listings)\n\tCompletionSetup(hosts->listings)']","[[379.3080313599785, 139.2292847316712]]","TopPathUnion(combine,LoadCompleteTable(neighborhoods),JoinRelationship(neighborhoods-listings, inverse=False, model=autoregressiveee00717369a014437559e6d972db4b90fa6e130f389a42728e3e090c),JoinRelationship(hosts-listings, inverse=True, model=autoregressiveee00717369a014437559e6d972db4b90fa6e130f389a42728e3e090c),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=hosts-listings),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=neighborhoods-listings,hosts-listings, tables=listings,hosts))",16.215679294022266,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(3, ([(2013.0, 77263.0), (2014.0, 93080.0), (2015.0, 110179.0), (2016.0, 81244.0), (2017.0, 15202.0)], None), ([(2013.0, 63178.0), (2014.0, 82057.0), (2015.0, 97104.0), (2016.0, 72032.0), (2017.0, 13254.0)], None), ([(2013.0, 78931.0), (2014.0, 102470.0), (2015.0, 121507.0), (2016.0, 90082.0), (2017.0, 16522.0)], None)), (4, (1.0, None), (1.0, None), (1.0, None)), (5, ([(2008.0, 112.0), (2009.0, 1409.0), (2010.0, 4126.0), (2011.0, 12627.0), (2012.0, 27223.0), (2013.0, 40580.0), (2014.0, 45532.0), (2015.0, 52944.0), (2016.0, 38226.0), (2017.0, 6951.0)], None), ([(2008.0, 98.0), (2009.0, 952.0), (2010.0, 3280.0), (2011.0, 11143.0), (2012.0, 23812.0), (2013.0, 32866.0), (2014.0, 39917.0), (2015.0, 46459.0), (2016.0, 33837.0), (2017.0, 6040.0)], None), ([(2008.0, 123.0), (2009.0, 1212.0), (2010.0, 4076.0), (2011.0, 13832.0), (2012.0, 29713.0), (2013.0, 40801.0), (2014.0, 49481.0), (2015.0, 57749.0), (2016.0, 42300.0), (2017.0, 7580.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(3, ([(2013.0, 77263.0), (2014.0, 93080.0), (2015.0, 110179.0), (2016.0, 81244.0), (2017.0, 15202.0)], None), ([(2013.0, 63178.0), (2014.0, 82057.0), (2015.0, 97104.0), (2016.0, 72032.0), (2017.0, 13254.0)], None), ([(2013.0, 78931.0), (2014.0, 102470.0), (2015.0, 121507.0), (2016.0, 90082.0), (2017.0, 16522.0)], None)), (4, (1.0, None), (1.0, None), (1.0, None)), (5, ([(2008.0, 112.0), (2009.0, 1409.0), (2010.0, 4126.0), (2011.0, 12627.0), (2012.0, 27223.0), (2013.0, 40580.0), (2014.0, 45532.0), (2015.0, 52944.0), (2016.0, 38226.0), (2017.0, 6951.0)], None), ([(2008.0, 98.0), (2009.0, 952.0), (2010.0, 3280.0), (2011.0, 11143.0), (2012.0, 23812.0), (2013.0, 32866.0), (2014.0, 39917.0), (2015.0, 46459.0), (2016.0, 33837.0), (2017.0, 6040.0)], None), ([(2008.0, 123.0), (2009.0, 1212.0), (2010.0, 4076.0), (2011.0, 13832.0), (2012.0, 29713.0), (2013.0, 40801.0), (2014.0, 49481.0), (2015.0, 57749.0), (2016.0, 42300.0), (2017.0, 7580.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,"['listings', 'hosts']","['neighborhoods', 'listings']","[[{}, {'output_tuples': 457026, 'input_tuples': 8005, 'elapsed_time': 2.9239264280186035, 'step': 'JoinRelationship(neighborhoods-listings, inverse=False, model=autoregressiveee00717369a014437559e6d972db4b90fa6e130f389a42728e3e090c)'}, {'output_tuples': 463023, 'input_tuples': 457026, 'elapsed_time': 2.1296430450165644, 'step': 'JoinRelationship(hosts-listings, inverse=True, model=autoregressiveee00717369a014437559e6d972db4b90fa6e130f389a42728e3e090c)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=hosts-listings)'}, {'replaced_tuples': 61240.0, 'input_tuples': 463023, 'elapsed_time': 11.12978469702648, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 463023, 'elapsed_time': 0.029210765031166375, 'step': 'ProjectRequestedJoin(all_r=neighborhoods-listings,hosts-listings, tables=listings,hosts)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
