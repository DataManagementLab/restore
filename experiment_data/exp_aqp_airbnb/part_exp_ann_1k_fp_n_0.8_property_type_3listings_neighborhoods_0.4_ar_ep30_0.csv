dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
airbnb,['ar_ep30'],"['neighborhoods', 'hosts', 'listings']","['listings', 'neighborhoods']","['neighborhoods.tf_listings.neighborhood_id', 'hosts.tf_listings.host_id']","[0.3, 0.3]",['listings'],[0.8],['categorical_prob_bias'],['listings.property_type'],['3'],[0.4],0,True,"['FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=hosts-listings,neighborhoods-listings)\n\tCompletionSetup(listings->neighborhoods, evidence=hosts-listings)\n\tCompletionSetup(hosts->listings)_FlatARModel(relations=neighborhoods-listings)\n\tCompletionSetup(neighborhoods->listings)']","[[333.7618199189892, 98.03861668426543]]","TopPathUnion(combine,LoadCompleteTable(hosts),JoinRelationship(hosts-listings, inverse=False, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b),JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=),ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=listings,neighborhoods))",6.655549830000382,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 2992.0), (2.0, 4897.0), (4.0, 1950.0), (5.0, 1611.0), (6.0, 708.0), (7.0, 1393.0), (8.0, 301.0), (9.0, 528.0), (10.0, 177.0), (11.0, 256.0), (36.0, 5487.0), (37.0, 645.0), (38.0, 337.0), (39.0, 778.0), (40.0, 281.0), (41.0, 426.0), (42.0, 747.0), (48.0, 373.0), (49.0, 151.0), (50.0, 204.0), (51.0, 344.0), (52.0, 261.0), (53.0, 170.0), (54.0, 66.0), (55.0, 302.0), (56.0, 32.0), (57.0, 31.0), (58.0, 106.0), (59.0, 71.0), (60.0, 123.0), (61.0, 64.0)], None), ([(1.0, 2835.0), (2.0, 4390.0), (4.0, 1663.0), (5.0, 1474.0), (6.0, 600.0), (7.0, 1358.0), (8.0, 283.0), (9.0, 468.0), (10.0, 164.0), (11.0, 226.0), (36.0, 5281.0), (37.0, 612.0), (38.0, 321.0), (39.0, 724.0), (40.0, 277.0), (41.0, 384.0), (42.0, 683.0), (48.0, 354.0), (49.0, 134.0), (50.0, 179.0), (51.0, 302.0), (52.0, 244.0), (53.0, 148.0), (54.0, 61.0), (55.0, 285.0), (56.0, 30.0), (57.0, 29.0), (58.0, 92.0), (59.0, 62.0), (60.0, 108.0), (61.0, 59.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (39055.0, None), (36180.0, None), (45629.0, None)), (8, ([(1.0, 23974.0), (2.0, 62044.0), (3.0, 5907.0), (4.0, 2827.0), (5.0, 2845.0), (6.0, 6027.0), (7.0, 9579.0), (8.0, 735.0), (9.0, 23181.0), (10.0, 2330.0), (11.0, 23214.0), (12.0, 2287.0), (13.0, 18.0), (14.0, 19412.0), (15.0, 12996.0), (16.0, 3508.0), (17.0, 16289.0), (18.0, 2.0), (22.0, 1.0), (23.0, 1.0)], None), ([(1.0, 21896.0), (2.0, 54265.0), (3.0, 5245.0), (4.0, 2509.0), (5.0, 2558.0), (6.0, 5494.0), (7.0, 8909.0), (8.0, 688.0), (9.0, 20564.0), (10.0, 2278.0), (11.0, 20539.0), (12.0, 2173.0), (13.0, 15.0), (14.0, 16715.0), (15.0, 10939.0), (16.0, 3232.0), (17.0, 15249.0), (18.0, 1.0), (23.0, 1.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))]), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'listings.property_type', [(6, ([(1.0, 2992.0), (2.0, 4897.0), (4.0, 1950.0), (5.0, 1611.0), (6.0, 708.0), (7.0, 1393.0), (8.0, 301.0), (9.0, 528.0), (10.0, 177.0), (11.0, 256.0), (36.0, 5487.0), (37.0, 645.0), (38.0, 337.0), (39.0, 778.0), (40.0, 281.0), (41.0, 426.0), (42.0, 747.0), (48.0, 373.0), (49.0, 151.0), (50.0, 204.0), (51.0, 344.0), (52.0, 261.0), (53.0, 170.0), (54.0, 66.0), (55.0, 302.0), (56.0, 32.0), (57.0, 31.0), (58.0, 106.0), (59.0, 71.0), (60.0, 123.0), (61.0, 64.0)], None), ([(1.0, 2835.0), (2.0, 4390.0), (4.0, 1663.0), (5.0, 1474.0), (6.0, 600.0), (7.0, 1358.0), (8.0, 283.0), (9.0, 468.0), (10.0, 164.0), (11.0, 226.0), (36.0, 5281.0), (37.0, 612.0), (38.0, 321.0), (39.0, 724.0), (40.0, 277.0), (41.0, 384.0), (42.0, 683.0), (48.0, 354.0), (49.0, 134.0), (50.0, 179.0), (51.0, 302.0), (52.0, 244.0), (53.0, 148.0), (54.0, 61.0), (55.0, 285.0), (56.0, 30.0), (57.0, 29.0), (58.0, 92.0), (59.0, 62.0), (60.0, 108.0), (61.0, 59.0)], None), ([(1.0, 3695.0), (2.0, 5752.0), (4.0, 2134.0), (5.0, 1881.0), (6.0, 768.0), (7.0, 1766.0), (8.0, 364.0), (9.0, 574.0), (10.0, 209.0), (11.0, 295.0), (36.0, 6780.0), (37.0, 793.0), (38.0, 439.0), (39.0, 960.0), (40.0, 361.0), (41.0, 464.0), (42.0, 883.0), (48.0, 449.0), (49.0, 170.0), (50.0, 222.0), (51.0, 379.0), (52.0, 309.0), (53.0, 186.0), (54.0, 83.0), (55.0, 358.0), (56.0, 46.0), (57.0, 34.0), (58.0, 118.0), (59.0, 80.0), (60.0, 145.0), (61.0, 74.0)], None)), (7, (39055.0, None), (36180.0, None), (45629.0, None)), (8, ([(1.0, 23974.0), (2.0, 62044.0), (3.0, 5907.0), (4.0, 2827.0), (5.0, 2845.0), (6.0, 6027.0), (7.0, 9579.0), (8.0, 735.0), (9.0, 23181.0), (10.0, 2330.0), (11.0, 23214.0), (12.0, 2287.0), (13.0, 18.0), (14.0, 19412.0), (15.0, 12996.0), (16.0, 3508.0), (17.0, 16289.0), (18.0, 2.0), (22.0, 1.0), (23.0, 1.0)], None), ([(1.0, 21896.0), (2.0, 54265.0), (3.0, 5245.0), (4.0, 2509.0), (5.0, 2558.0), (6.0, 5494.0), (7.0, 8909.0), (8.0, 688.0), (9.0, 20564.0), (10.0, 2278.0), (11.0, 20539.0), (12.0, 2173.0), (13.0, 15.0), (14.0, 16715.0), (15.0, 10939.0), (16.0, 3232.0), (17.0, 15249.0), (18.0, 1.0), (23.0, 1.0)], None), ([(1.0, 27336.0), (2.0, 65371.0), (3.0, 6610.0), (4.0, 3176.0), (5.0, 3341.0), (6.0, 7073.0), (7.0, 11414.0), (8.0, 886.0), (9.0, 26856.0), (10.0, 2780.0), (11.0, 25722.0), (12.0, 2765.0), (13.0, 18.0), (14.0, 21474.0), (15.0, 13579.0), (16.0, 4230.0), (17.0, 18272.0), (18.0, 2.0), (23.0, 1.0)], None))])]",False,none,[0.4],[0.4],1.0,True,1000,10000,"['listings', 'neighborhoods']","['hosts', 'listings']","[[{}, {'output_tuples': 432886, 'input_tuples': 363133, 'elapsed_time': 3.3399884940008633, 'step': 'JoinRelationship(hosts-listings, inverse=False, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b)'}, {'output_tuples': 432742, 'input_tuples': 432886, 'elapsed_time': 1.6445975770475343, 'step': 'JoinRelationship(neighborhoods-listings, inverse=True, model=autoregressivefb4bc57252e535c289c5f77f59c03303288742d869293928b097e39b)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=hosts-listings, replace_join_relationships=neighborhoods-listings)'}, {'replaced_tuples': 30944.0, 'input_tuples': 432742, 'elapsed_time': 1.643318124988582, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=neighborhoods-listings, replace_join_relationships=)'}, {'fan_out_tuple_factors': [], 'input_tuples': 432742, 'elapsed_time': 0.02452642295975238, 'step': 'ProjectRequestedJoin(all_r=hosts-listings,neighborhoods-listings, tables=listings,neighborhoods)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),aqp
