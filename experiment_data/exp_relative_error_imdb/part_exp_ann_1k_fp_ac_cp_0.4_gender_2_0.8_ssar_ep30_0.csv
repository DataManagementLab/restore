dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,['ssar_ep30'],"['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['actor'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['actor', 'movie']","[0.4, 0.8]","['categorical_prob_bias', 'uniform']","['actor.gender', 'none']","['2', 'none']","[0.8, 0.0]",0,True,"['SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id, movie_companies.company_type_id)']","[[984.4832646138966, 404.4409484239295]]","TopPathUnion(combine,LoadCompleteTable(company),JoinRelationship(company-movie_companies, inverse=False, model=ssar3b072ac662dd9356e95d6e40d360cb022f5064cbe7a8a2620e55bb8f),JoinRelationship(movie-movie_companies, inverse=True, model=ssar3b072ac662dd9356e95d6e40d360cb022f5064cbe7a8a2620e55bb8f),JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=movie-movie_companies,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=actor-movie_actor),JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=movie-movie_companies,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=),ProjectRequestedJoin(all_r=company-movie_companies,movie-movie_companies,movie-movie_actor,actor-movie_actor, tables=actor))",1093.8537699668668,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', 0.5358051165801907, 0.5234632821058208, 0.3559711592828554, 2695356, 1078142, 2055288.2034649886), (True, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', 0.5358051165801907, 0.5234632821058208, 0.3559711592828554, 2695356, 1078142, 2055288.2034649886)]",False,none,[0.4],[0.4],1.0,True,1000,10000,['actor'],"['company', 'movie_companies', 'movie', 'movie_actor', 'actor']","[[{}, {'output_tuples': 2521847, 'input_tuples': 234996, 'elapsed_time': 18.711988527793437, 'step': 'JoinRelationship(company-movie_companies, inverse=False, model=ssar3b072ac662dd9356e95d6e40d360cb022f5064cbe7a8a2620e55bb8f)'}, {'output_tuples': 2521847, 'input_tuples': 2521847, 'elapsed_time': 12.932563342619687, 'step': 'JoinRelationship(movie-movie_companies, inverse=True, model=ssar3b072ac662dd9356e95d6e40d360cb022f5064cbe7a8a2620e55bb8f)'}, {'output_tuples': 39444112, 'input_tuples': 2521847, 'elapsed_time': 149.58739474462345, 'step': 'JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=movie-movie_companies)'}, {'replaced_tuples': 0, 'input_tuples': 39444112, 'elapsed_time': 9.321236825082451, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=)'}, {'output_tuples': 19801395, 'input_tuples': 39444112, 'elapsed_time': 212.84553878894076, 'step': 'JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=movie-movie_companies,actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 19801395, 'elapsed_time': 7.427026119083166, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 1967500.0, 'input_tuples': 19801395, 'elapsed_time': 682.4267683471553, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_actor.person_id', 'tf_movie_companies.movie_id'], 'input_tuples': 19801395, 'elapsed_time': 0.5375562808476388, 'step': 'ProjectRequestedJoin(all_r=company-movie_companies,movie-movie_companies,movie-movie_actor,actor-movie_actor, tables=actor)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),relative_error
