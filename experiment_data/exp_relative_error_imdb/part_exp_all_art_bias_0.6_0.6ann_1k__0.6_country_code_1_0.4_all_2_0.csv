dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,"['ar_ep30', 'ssar_ep30']","['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['company'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['company', 'movie']","[0.6, 0.8]","['categorical_prob_bias', 'uniform']","['company.country_code', 'none']","['1', 'none']","[0.4, 0.0]",0,True,"['FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)_FlatARModel(relations=movie-movie_companies,company-movie_companies)\n\tCompletionSetup(movie->movie_companies)\n\tCompletionSetup(movie_companies->company, evidence=movie-movie_companies)_FlatARModel(relations=movie-movie_companies,company-movie_companies)\n\tCompletionSetup(movie->movie_companies)\n\tCompletionSetup(movie_companies->company, evidence=movie-movie_companies)_FlatARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)_FlatARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)', 'SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=movie-movie_companies,company-movie_companies)\n\tCompletionSetup(movie_companies->company, evidence=movie-movie_companies)\n\tCompletionSetup(movie->movie_companies)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_companies,company-movie_companies)\n\tCompletionSetup(movie_companies->company, evidence=movie-movie_companies)\n\tCompletionSetup(movie->movie_companies)\n\tHierarchy(movie.id, company.id, company.country_code, company.tf_movie_companies.company_id, movie_companies.company_type_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tHierarchy(actor.id, movie_actor.person_role_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=actor-movie_actor,movie-movie_actor)\n\tCompletionSetup(movie_actor->movie, evidence=actor-movie_actor)\n\tCompletionSetup(actor->movie_actor)\n\tHierarchy(actor.id, movie_actor.person_role_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)']","[[346.0525501789525, 252.9487383645028, 372.476210327819], [686.2924924842082, 917.1466156519018, 759.4245056202635]]","TopPathUnion(combine,LoadCompleteTable(director),JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_companies, inverse=False, model=ssar7a722087fa7158d35319ae04187a824d496afd47a8b42c29d009c19e),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,company-movie_companies),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=company-movie_companies),JoinRelationship(company-movie_companies, inverse=True, model=ssar7a722087fa7158d35319ae04187a824d496afd47a8b42c29d009c19e),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,company-movie_companies),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=company-movie_companies),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=company-movie_companies),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=),ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_companies,company-movie_companies, tables=company))",186.36371800210327,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'company.country_code', 0.47047211452666154, 0.45933225007309086, 0.4019623635536689, 234996, 140997, 189203.1098741263)]",False,artificial_bias,[0.6],[0.6],1.0,True,1000,10000,['company'],,"[[{}, {'output_tuples': 1624976, 'input_tuples': 299039, 'elapsed_time': 9.228254194837064, 'step': 'JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 1624976, 'input_tuples': 1624976, 'elapsed_time': 5.00646864483133, 'step': 'JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 2345594, 'input_tuples': 1624976, 'elapsed_time': 72.66476640384644, 'step': 'JoinRelationship(movie-movie_companies, inverse=False, model=ssar7a722087fa7158d35319ae04187a824d496afd47a8b42c29d009c19e)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director)'}, {'replaced_tuples': 0, 'input_tuples': 2345594, 'elapsed_time': 5.442213326692581, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=)'}, {'output_tuples': 1530316, 'input_tuples': 2345594, 'elapsed_time': 83.42875680373982, 'step': 'JoinRelationship(company-movie_companies, inverse=True, model=ssar7a722087fa7158d35319ae04187a824d496afd47a8b42c29d009c19e)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,company-movie_companies)'}, {'replaced_tuples': 0, 'input_tuples': 1530316, 'elapsed_time': 2.8292025201953948, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=company-movie_companies)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_companies, replace_join_relationships=company-movie_companies)'}, {'replaced_tuples': 160873.0, 'input_tuples': 1530316, 'elapsed_time': 7.730185694992542, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=company-movie_companies, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_companies.company_id', 'tf_movie_director.movie_id'], 'input_tuples': 1530316, 'elapsed_time': 0.02525009633973241, 'step': 'ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_companies,company-movie_companies, tables=company)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),relative_error
