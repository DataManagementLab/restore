dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,"['ar_ep30', 'ssar_ep30']","['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['actor'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['actor', 'movie']","[0.4, 0.8]","['categorical_prob_bias', 'uniform']","['actor.gender', 'none']","['2', 'none']","[0.2, 0.0]",0,True,"['FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)_FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)_FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(director->movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(director->movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)', 'SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie_companies.company_type_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie_companies.company_type_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, movie_actor.person_role_id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)']","[[223.4199457783252, 332.78144570905715, 459.4838066571392], [574.5387492608279, 912.7996461880393, 601.0719196703285]]","TopPathUnion(combine,LoadCompleteTable(director),JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e),JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d),ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor))",232.96575220301747,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', 0.3986998002118459, 0.3980472921704789, 0.3559711592828554, 2695356, 1078142, 903707.7369581916)]",True,artificial_bias,[0.4],[0.4],1.0,False,1000,10000,['actor'],,"[[{}, {'output_tuples': 1627601, 'input_tuples': 299039, 'elapsed_time': 9.64546396676451, 'step': 'JoinRelationship(director-movie_director, inverse=False, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 1627601, 'input_tuples': 1627601, 'elapsed_time': 5.096306030638516, 'step': 'JoinRelationship(movie-movie_director, inverse=True, model=ssar495710fdd6cb96b2190543402439d06b52028467ad5931d5cb0a563e)'}, {'output_tuples': 17834112, 'input_tuples': 1627601, 'elapsed_time': 94.57496951986104, 'step': 'JoinRelationship(movie-movie_actor, inverse=False, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'output_tuples': 8866482, 'input_tuples': 17834112, 'elapsed_time': 123.38400895707309, 'step': 'JoinRelationship(actor-movie_actor, inverse=True, model=ssar544dd0952b3f7ea744c8a6b91f1a70122773060acbbeba75b337c34d)'}, {'fan_out_tuple_factors': ['tf_movie_actor.person_id', 'tf_movie_director.movie_id'], 'input_tuples': 8866482, 'elapsed_time': 0.24624440725892782, 'step': 'ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),relative_error
