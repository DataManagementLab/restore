dataset,models,projected_tables,completion_tables,tf_removals,tf_keep_rates,tuple_removal_table,tuple_removal_keep_rate,removal_method,removal_attr,removal_attr_values,removal_attr_bias,seed,cascading_deletes,model_families,training_times,query_plan,execution_time,evaluation,fully_synthetic,model_selection_strategy,validation_tuple_removal_keep_rate,validation_removal_attr_bias,validation_tf_keep_rate,not_synthetic,ann_batch_size,ann_neighbors_considered,completable_tables,fixed_completion_path,execution_stats,top_path_union_strategy,prefer_baseline,code_comment,evaluation_method
imdb,"['ar_ep30', 'ssar_ep30']","['movie', 'movie_companies', 'company', 'movie_director', 'director', 'movie_actor', 'actor']",['actor'],"['company.tf_movie_companies.company_id', 'director.tf_movie_director.person_id', 'actor.tf_movie_actor.person_id']","[0.2, 0.2, 0.2]","['actor', 'movie']","[0.4, 0.8]","['categorical_prob_bias', 'uniform']","['actor.gender', 'none']","['2', 'none']","[0.6, 0.0]",0,True,"['FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)_FlatARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)_FlatARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)', 'SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=movie-movie_actor,actor-movie_actor)\n\tCompletionSetup(movie_actor->actor, evidence=movie-movie_actor)\n\tCompletionSetup(movie->movie_actor)\n\tHierarchy(movie.id, movie_companies.company_type_id, company.id, company.country_code, company.tf_movie_companies.company_id)\n\tHierarchy(movie.id, actor.id, actor.gender, actor.birth_year, actor.birth_country, actor.tf_movie_actor.person_id, movie_actor.person_role_id)\n\tHierarchy(movie.id, director.id, director.gender, director.birth_year, director.birth_country, director.tf_movie_director.person_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie_companies.company_type_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=company-movie_companies,movie-movie_companies)\n\tCompletionSetup(movie_companies->movie, evidence=company-movie_companies)\n\tCompletionSetup(company->movie_companies)\n\tHierarchy(company.id, movie_companies.company_type_id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)_SSARModel(relations=director-movie_director,movie-movie_director)\n\tCompletionSetup(movie_director->movie, evidence=director-movie_director)\n\tCompletionSetup(director->movie_director)\n\tHierarchy(director.id, movie.id, movie.kind_id, movie.production_year, movie.runtime, movie.genre, movie.country, movie.rating, movie.tf_movie_companies.movie_id, movie.tf_movie_actor.movie_id, movie.tf_movie_director.movie_id)']","[[488.60322314081714, 354.09911479009315, 438.8571789851412], [1021.7481740284711, 558.8751360094175, 519.9774987045676]]","TopPathUnion(combine,LoadCompleteTable(director),JoinRelationship(director-movie_director, inverse=False, model=autoregressivefad61c4eba4b46cbcf2fea3a9b074e856dd56b05c1cf35248d0b07dc),JoinRelationship(movie-movie_director, inverse=True, model=autoregressivefad61c4eba4b46cbcf2fea3a9b074e856dd56b05c1cf35248d0b07dc),JoinRelationship(movie-movie_actor, inverse=False, model=autoregressivee6c5d7f4c05a562794963859d4c61d9bf88148fb83b5c7413d947fd3),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),JoinRelationship(actor-movie_actor, inverse=True, model=autoregressivee6c5d7f4c05a562794963859d4c61d9bf88148fb83b5c7413d947fd3),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor),ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=),ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor))",201.4564269790426,"[(False, <RemovalMethod.CATEGORICAL_PROB_BIAS: 'categorical_prob_bias'>, 'actor.gender', 0.4785343674580899, 0.47909216476394023, 0.3559711592828554, 2695356, 1078142, 1032272.2151745223)]",False,artificial_bias,[0.4],[0.4],1.0,True,1000,10000,['actor'],,"[[{}, {'output_tuples': 1516517, 'input_tuples': 299039, 'elapsed_time': 1.6057081897743046, 'step': 'JoinRelationship(director-movie_director, inverse=False, model=autoregressivefad61c4eba4b46cbcf2fea3a9b074e856dd56b05c1cf35248d0b07dc)'}, {'output_tuples': 1516517, 'input_tuples': 1516517, 'elapsed_time': 2.59707857016474, 'step': 'JoinRelationship(movie-movie_director, inverse=True, model=autoregressivefad61c4eba4b46cbcf2fea3a9b074e856dd56b05c1cf35248d0b07dc)'}, {'output_tuples': 16979144, 'input_tuples': 1516517, 'elapsed_time': 37.103847060352564, 'step': 'JoinRelationship(movie-movie_actor, inverse=False, model=autoregressivee6c5d7f4c05a562794963859d4c61d9bf88148fb83b5c7413d947fd3)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director)'}, {'replaced_tuples': 0, 'input_tuples': 16979144, 'elapsed_time': 10.454919690266252, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=)'}, {'output_tuples': 7994180, 'input_tuples': 16979144, 'elapsed_time': 31.639244666788727, 'step': 'JoinRelationship(actor-movie_actor, inverse=True, model=autoregressivee6c5d7f4c05a562794963859d4c61d9bf88148fb83b5c7413d947fd3)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=director-movie_director, replace_join_relationships=movie-movie_director,actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 7994180, 'elapsed_time': 5.097395081073046, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_director, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 0, 'input_tuples': 0, 'elapsed_time': 0, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=movie-movie_actor, replace_join_relationships=actor-movie_actor)'}, {'replaced_tuples': 976421.0, 'input_tuples': 7994180, 'elapsed_time': 112.71833365783095, 'step': 'ApproximateNearestNeighbor(batch_size=1000, neighbors_considered=10000, r=actor-movie_actor, replace_join_relationships=)'}, {'fan_out_tuple_factors': ['tf_movie_actor.person_id', 'tf_movie_director.movie_id'], 'input_tuples': 7994180, 'elapsed_time': 0.20004427526146173, 'step': 'ProjectRequestedJoin(all_r=director-movie_director,movie-movie_director,movie-movie_actor,actor-movie_actor, tables=actor)'}]]",combine,False,Now numba discretizing & efficient ANN (no repeat),relative_error
